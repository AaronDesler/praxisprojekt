{
  "features": {
    "code_quality": {
      "name": "Code quality",
      "metrics": {
        "number_of_lines_of_source_code_loc": {
          "name": "Source Code Lines",
          "fulfilled_if": "<",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Sum of actual lines of code, excl. empty & comment lines.",
          "example_component": "For a total batch of 100 lines of code, with 10 blank and comment lines, an input of 80 follows.",
          "helper_text": "For a total batch of 100 lines of code, with 10 blank and comment lines, an input of 80 follows."
        },
        "development_time": {
          "name": "Development time [in developer days]",
          "fulfilled_if": "<",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Average development time of a patch (in developer days).",
          "example_component": "If three developers work on a patch for three days, the input 9 follows [Developer days].",
          "helper_text": "Average development time of a patch in developer days"
        },
        "code_review_frequency": {
          "name": "Code Reviews [per year]",
          "fulfilled_if": ">",
          "max_value": 365,
          "min_value": 0,
          "description_component": "Number of code reviews per year.",
          "example_component": "If there are 3 code reviews per month, 36 will be entered.",
          "helper_text": "If there are 3 code reviews per month, 36 will be entered."
        },
        "comment_quality": {
          "name": "Quality of comments [in %]",
          "fulfilled_if": ">",
          "max_value": 100,
          "min_value": 0,
          "description_component": "Ratio between comment lines and number of lines of source code incl. comment lines (in %).",
          "example_component": "For a total of 100 lines of code with 10 comment lines, the input is 10 [%].",
          "helper_text": "For a total of 100 lines of code with 10 comment lines, the input is 10 [%]."
        }
      }
    },
    "integrity": {
      "name": "Integrity",
      "metrics": {
        "back-up": {
          "name": "Back-Ups [per month]",
          "fulfilled_if": ">",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Number of backup creations per month.",
          "example_component": "If a backup is created every day, an input of 30 (rounded) follows.",
          "helper_text": "If a backup is created every day, an input of 30 (rounded) follows."
        },
        "change_tracking": {
          "name": "Tracking of changes",
          "fulfilled_if": ">",
          "max_value": 1,
          "min_value": 0,
          "description_component": "Are changes recorded / logged in the component.",
          "example_component": "If this is the case, an input of 1, otherwise 0, follows.",
          "helper_text": "If this is the case, an input of 1, otherwise 0, follows."
        },
        "patch_status_check": {
          "name": "Review of patch status [per month]",
          "fulfilled_if": ">",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Number of system checks for patch status per month.",
          "example_component": "If the patch status is checked 5 times per month, the input is 5.",
          "helper_text": "If the patch status is checked 5 times per month, the input is 5."
        }
      }
    },
    "usage": {
      "name": "Usage",
      "metrics": {
        "complaints": {
          "name": "Complaints [per month]",
          "fulfilled_if": ">",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Number of user complaints per month.",
          "example_component": "With a total of 15 user complaints per month, an entry of 15 follows.",
          "helper_text": "With a total of 15 user complaints per month, an entry of 15 follows."
        },
        "training": {
          "name": "Training",
          "fulfilled_if": ">",
          "max_value": 1,
          "min_value": 0,
          "description_component": "Have all users of the component been adequately trained?",
          "example_component": "If this is the case, an input of 1, otherwise 0, follows.",
          "helper_text": "If this is the case, an input of 1, otherwise 0, follows."
        },
        "automation": {
          "name": "Automation",
          "fulfilled_if": ">",
          "max_value": 1,
          "min_value": 0,
          "description_component": "Is the component operated automatically?",
          "example_component": "If this is the case, an input of 1, otherwise 0, follows.",
          "helper_text": "If this is the case, an input of 1, otherwise 0, follows."
        }
      }
    },
    "test_quality": {
      "name": "Test quality",
      "metrics": {
        "test_automation": {
          "name": "Test-Automation[in %]",
          "fulfilled_if": ">",
          "max_value": 100,
          "min_value": 0,
          "description_component": "The ratio between automated test cases and the totality of all test cases.",
          "example_component": "With 15 automated test cases out of a total of 60 test cases, an input of 25 [%] follows.",
          "helper_text": "With 15 automated test cases out of a total of 60 test cases, an input of 25 [%] follows."
        },
        "ratio_of_late_corrections": {
          "name": "Timely corrections [in %]",
          "fulfilled_if": ">",
          "max_value": 100,
          "min_value": 0,
          "description_component": "The relationship between automated test cases and the totality of all test cases.",
          "example_component": "With 60 errors fixed on time, out of a total of 80 errors, an input of 75 [%] follows.",
          "helper_text": "With 60 errors fixed on time, out of a total of 80 errors, an input of 75 [%] follows."
        },
        "pre_post_release_faults_ratio": {
          "name": "Pre/Post Release-Faults-Ratio [in %]",
          "fulfilled_if": ">",
          "max_value": 100,
          "min_value": 0,
          "description_component": "The ratio between detected errors before release and totality of all errors. Good index: 90% of errors were detected before the release.",
          "example_component": "With 15 detected errors before the release, out of a total of 20 errors, an input of 75 [%] follows.",
          "helper_text": "With 15 detected errors before the release, out of a total of 20 errors, an input of 75 [%] follows."
        },
        "error_during_testing": {
          "name": "Errors when testing [in %]",
          "fulfilled_if": ">",
          "max_value": 100,
          "min_value": 0,
          "description_component": "Relationship between successful test cases and totality of all test cases.",
          "example_component": "With 15 successful tests out of a total of 17 tests, an input of 88 [%] follows.",
          "helper_text": "With 15 successful tests out of a total of 17 tests, an input of 88 [%] follows."
        },
        "testability": {
          "name": "Testability",
          "fulfilled_if": ">",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Number of different test cases.",
          "example_component": "The absolute number of test cases is 30. The entry of 30 is made",
          "helper_text": "The absolute number of test cases is 30. The entry of 30 is made"
        },
        "test_scope": {
          "name": "Test scope [in hours]",
          "fulfilled_if": ">",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Duration of the test activities (in hours).",
          "example_component": "The total test duration (sum) was 400 hours. The input of 400 is made.",
          "helper_text": "The total test duration (sum) was 400 hours. The input of 400 is made."
        }
      }
    },
    "scope": {
      "name": "Scope",
      "metrics": {
        "time_to_implement_updates": {
          "name": "Implementation time of updates [in days]",
          "fulfilled_if": ">",
          "max_value": -1,
          "min_value": 0,
          "description_component":"Time to implement post-release updates (average) until they are implemented (in days).",
          "example_component": "It takes (on average) 27 days for updates to be implemented after release. The entry of 27 will be made.",
          "helper_text": "It takes (on average) 27 days for updates to be implemented after release. The entry of 27 will be made."
        },
        "external_support": {
          "name": "External Support",
          "fulfilled_if": ">",
          "max_value": 1,
          "min_value": 0,
          "description_component":"Is external support available?",
          "example_component": "If this is the case, an input of 1, otherwise 0, follows.",
          "helper_text": "If this is the case, an input of 1, otherwise 0, follows."
        },
        "internal_support": {
          "name": "Internal Support",
          "fulfilled_if": ">",
          "max_value": 1,
          "min_value": 0,
          "description_component": "Is internal support available?",
          "example_component": "If this is the case, an input of 1, otherwise 0, follows.",
          "helper_text": "If this is the case, an input of 1, otherwise 0, follows."
        }
      }
    },
    "availability": {
      "name": "Availability",
      "metrics": {
        "number_of_views_per_day": {
          "name": "Requests [per day]",
          "fulfilled_if": "<",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Number of average requests that the component can handle per day.",
          "example_component": "The component can handle 100,000 average requests per day. Input 100,000 is entered.",
          "helper_text": "The component can handle 100,000 average requests per day. Input 100,000 is entered."
        },
        "restart": {
          "name": "Restart time [in minutes]",
          "fulfilled_if": "<",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Duration of a full restart of the component (in minutes).", 
          "example_component": "It takes 24 minutes to restart the component. The input of 24 is made.", 
          "helper_text": "It takes 24 minutes to restart the component. The input of 24 is made."
        },
        "downtime": {
          "name": "Downtime [in minutes per year]",
          "fulfilled_if": "<",
          "max_value": 525600,
          "min_value": 0,
          "description_component": "Downtime within the last year incl. repair work (in minutes).
          Availability 90%: 52,595 min
          Availability 95%: 26,298 min
          Availability 99%: 5,256 min 
          Availability 99.9%: 525.6 min
          Availability 99.99%: 52.56 min
          Verfügbarkeit 90%: 52.595 min
          Verfügbarkeit 95%: 26.298 min
          Verfügbarkeit 99%: 5.256 min 
          Verfügbarkeit 99,9%: 525,6 min
          Verfügbarkeit 99,99%: 52,56 min",
          "example_component": "The total downtime of the component last year. If the component's availability was 99%, the input is 5,256 [min]."
          "helper_text": "The total downtime of the component last year. If the component's availability was 99%, the input is 5,256 [min]."
        },
        "maximum_downtime_at_a_time": {
          "name": "Max Donwtime at one time [in minutes]",
          "fulfilled_if": "<",
          "max_value": 525600,
          "min_value": 0,
          "description_component":"Duration of maximum downtime at a time during the last year incl. repair work (in minutes).", 
          "example_component": "In the case of several failures per year, the entry for the longest consecutive downtime follows. If a component has failed for a maximum of 180min and 420min, an input of 420 follows.", 
          "helper_text": "In the case of several failures per year, the entry for the longest consecutive downtime follows. If a component has failed for a maximum of 180min and 420min, an input of 420 follows."
        },
        "time_between_failures": {
          "name": "Time between crashes [in days]",
          "fulfilled_if": ">",
          "max_value": -1,
          "min_value": 0,
          "description_component": "Average duration between crashes within the last year (in days).
          ", 
          "example_component": "With 5 failures per year, the average time between failures is 73 [days] (365/5).",
          "helper_text": "With 5 failures per year, the average time between failures is 73 [days] (365/5)."
        },
        "restore_time": {
          "name": "Recovery time [in minutes]",
          "fulfilled_if": "<",
          "max_value": -1,
          "min_value": 0,
          "description_component":"Average duration, after a failure, until the component is functional again, including repair work (in minutes).",
          "example_component": "If the recovery for components lasts 36 minutes, an input of 36 minutes follows. ",
          "helper_text": "If the recovery for components lasts 36 minutes, an input of 36 minutes follows."
        },
        "planned_maintenance_percentage": {
          "name": "Planned Maintenance Percentage (PMP) [in %]",
          "fulfilled_if": "<",
          "max_value": -1,
          "min_value": 0,
          "description_component":"Ratio between total maintenance hours per year and planned maintenance hours per year.",
          "example_component": "If the recovery for components lasts 36 minutes, an input of 36 minutes follows. ",
          "helper_text": "If 10 hours of maintenance were planned, but 12 hours of maintenance were performed, the input of 120 [%] follows."
        },
        "redundancy": {
          "name": "Redundancy",
          "fulfilled_if": ">",
          "max_value": 1,
          "min_value": 0,
          "description_component":"Is the component redundant?
          ",
          "example_component": "If this is the case, an input of 1, otherwise 0, follows.
          ",
          "helper_text": "If this is the case, an input of 1, otherwise 0, follows."
        }
      }
    },
    "confidentiality": {
      "name": "Confidentiality",
      "metrics": {
        "number_of_administrators": {
          "name": "Administrators",
          "fulfilled_if": ">",
          "max_value": -1,
          "min_value": 0,
          "description_component":"Number of administrators for the component.",
          "example_component": "If there are 4 administrators for a component, an input of 4 follows. If an administrator is responsible for multiple components, he will be considered as a single administrator for each component.",
          "helper_text": "If there are 4 administrators for a component, an input of 4 follows. If an administrator is responsible for multiple components, he will be considered as a single administrator for each component."
        },
        "encryption": {
          "name": "Encryption",
          "fulfilled_if": ">",
          "max_value": 1,
          "min_value": 0,
          "description_component":"Is the data sufficiently encrypted?",
          "example_component": "If this is the case, an input of 1, otherwise 0, follows.",
          "helper_text": "If this is the case, an input of 1, otherwise 0, follows."
        }
      }
    }
  },
  "categories": {
    "default": {
      "name": "Default",
      "sections": {
        "code_quality": "false",
        "integrity": "false",
        "usage": "false",
        "test_quality": "false",
        "scope": "false",
        "availability": "false",
        "confidentiality": "false"
      }
    },
    "databases": {
      "name": "Databases",
      "sections": {
        "code_quality": "false",
        "integrity": "true",
        "usage": "true",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "interfaces": {
      "name": "Interfaces",
      "sections": {
        "code_quality": "true",
        "integrity": "false",
        "usage": "false",
        "test_quality": "true",
        "scope": "false",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "server": {
      "name": "Server",
      "sections": {
        "code_quality": "false",
        "integrity": "true",
        "usage": "true",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "firewall": {
      "name": "Firewall",
      "sections": {
        "code_quality": "true",
        "integrity": "true",
        "usage": "false",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "ui": {
      "name": "User Interface",
      "sections": {
        "code_quality": "true",
        "integrity": "false",
        "usage": "true",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "api_gateway": {
      "name": "API Gateway",
      "sections": {
        "code_quality": "true",
        "integrity": "false",
        "usage": "false",
        "test_quality": "true",
        "scope": "false",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "application_gateway": {
      "name": "Application Gateway",
      "sections": {
        "code_quality": "true",
        "integrity": "false",
        "usage": "false",
        "test_quality": "true",
        "scope": "false",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "custom_software": {
      "name": "Custom Software",
      "sections": {
        "code_quality": "false",
        "integrity": "true",
        "usage": "true",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "loadbalancer": {
      "name": "Loadbalancer",
      "sections": {
        "code_quality": "false",
        "integrity": "false",
        "usage": "false",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "identity_provider": {
      "name": "Identity Provider",
      "sections": {
        "code_quality": "false",
        "integrity": "false",
        "usage": "false",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
    },
    "standardized_software": {
      "name": "Standardized Software",
      "sections": {
        "code_quality": "false",
        "integrity": "true",
        "usage": "true",
        "test_quality": "false",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
    },
 "application_admin_plug_in": {
      "name": "Application- / Administrative tools / Plug-Ins",
      "sections": {
        "code_quality": "false",
        "integrity": "false",
        "usage": "true",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
 },
  "service_registry": {
      "name": "Service Registry",
      "sections": {
        "code_quality": "false",
        "integrity": "false",
        "usage": "false",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
  },
   "individual_data_processing": {
      "name": "Individual Data Processing",
      "sections": {
        "code_quality": "true",
        "integrity": "true",
        "usage": "true",
        "test_quality": "true",
        "scope": "true",
        "availability": "true",
        "confidentiality": "true"
      }
    },
     "business_logic": {
      "name": "Business-Logic",
      "sections": {
        "code_quality": "true",
        "integrity": "false",
        "usage": "false",
        "test_quality": "true",
        "scope": "false",
        "availability": "true",
        "confidentiality": "true"
      }
    }
  }
}


